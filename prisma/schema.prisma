// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model userRole {
  id    Int    @id @default(autoincrement())
  label String @unique

  // meta
  isDeleted Boolean  @default(false)
  createdTs DateTime @default(now())
  updatedTs DateTime @default(now()) @updatedAt

  // relations
  userOrganization userOrganization[]
}

model user {
  id                   String    @id @default(uuid())
  username             String    @unique
  password             String
  isPhone              Boolean   @default(false)
  fName                String
  lName                String
  profilePicUrl        String    @default("")
  passwordExpireDate   DateTime?
  shouldChangePassword Boolean   @default(false)

  isGlobalAdmin Boolean

  // meta
  isDeleted Boolean  @default(false)
  createdTs DateTime @default(now())
  updatedTs DateTime @default(now()) @updatedAt

  // relations
  userOrganization userOrganization[]
}

model organization {
  id          Int    @id @default(autoincrement())
  name        String
  description String

  // meta
  isDeleted Boolean  @default(false)
  createdTs DateTime @default(now())
  updatedTs DateTime @default(now()) @updatedAt

  // relations
  userOrganization userOrganization[]
}

model userOrganization {
  id             Int    @id @default(autoincrement())
  userId         String
  organizationId Int
  roleId         Int

  // meta
  isDeleted Boolean  @default(false)
  createdTs DateTime @default(now())
  updatedTs DateTime @default(now()) @updatedAt

  // relations
  user         user         @relation(fields: [userId], references: [id])
  organization organization @relation(fields: [organizationId], references: [id])
  userRole     userRole     @relation(fields: [roleId], references: [id])
}
